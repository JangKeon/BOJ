#include <iostream>
#include <string.h>
#include <queue>
using namespace std;

int map[100][100];
int N, result = 0;
int dx[2] = { 0, 1 };
int dy[2] = { 1, 0 };

queue <pair<int, int>> que;

void bfs (){
    while(!que.empty()){
        int x = que.front().first;
        int y = que.front().second;
        cout << x << '\n' << y;
        que.pop();
        for (int i = 0; i < 2; i++){
            int ax = x + (map[x][y] * dx[i]);
            int ay = y + (map[x][y] * dy[i]);
            
            if(ax < 0 || ax > N -1 || ay < 0 || ay > N - 1){
                continue;
            }
        
            if(!map[ax][ay]){
                result ++;
            }    
            que.push(make_pair(ax, ay));
        }
    }
}

int main (){
  cin >> N;
  int num;
  for (int i = 0; i < N; i++){
    for (int j = 0; j < N; j++){
	    cin >> num;
	    map[i][j] = num;
	}
  }
  que.push(make_pair(0,0));
  bfs();
  cout << result;
  return 0;
}
